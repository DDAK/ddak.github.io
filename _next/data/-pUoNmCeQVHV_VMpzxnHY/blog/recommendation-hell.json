{"pageProps":{"postMetadata":{"title":"Stranded on a 'recommendation-island'","description":"How recommendation engines get stuck on a 'recommendation-island' and how to rescue from it.","imgName":"recommendation-hell/recommendation-hell.jpg","date":"Feb 09, 2020","tags":["AI","ML","recommendation-engine","search-engine"],"keywords":["recommendation-engine","netflix","amazon","prime","ml","ai","machine-learning","artificial-intelligence","bayesian","multi-arm-bandit"],"id":"recommendation-hell"},"postContent":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h6: \"h6\",\n    img: \"img\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    strong: \"strong\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"recommendation-hell/recommendation-hell.jpg\",\n        alt: \"Stranded on a 'recommendation-island'\"\n      })\n    }), \"\\n\", _jsxs(_components.h6, {\n      id: \"published-on-feb-09-2020\",\n      children: [\"Published on: \", _jsx(_components.strong, {\n        children: \"Feb 09, 2020\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When signing up for a Netflix account I was asked about the ‘shows that interest me’ --I presume to build my recommendation profile. However, since that day I have been stuck on a \\\"recommendation-island\\\" which is rife with the monotonicity based on my interest at the signup time.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Seasons change, our mood changes, our situations change, our circumstances changes. Human tastes can change/adapt over time. Then why should a recommendation engine get stuck on an island, based on the interests I selected at the start, and not adapt?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Why do these engines and people building them forget that:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Our interests change over time,\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"We often don’t know what actually interests us?\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Recommendation engine thinks that I like Japanese anime; when in fact I just liked one particular series.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"a.) To avoid being stuck on an island, a user should be, maybe, periodically asked to update their interests.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"b.) We could also use an 80-20 rule, 80% allocated to my expressed interest and allocate 20% to random choices. Thereafter, update the profile if a selection is made from the random-set; maybe use something that is elegant (bayesian, multi-arm bandit etc) to update the recommendation profile.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The idea of these update mechanisms is to identify and capture the implied interests, periodically. The implied interest should tailor the recommendation engine to my current taste somewhat accurately; albeit with a grain of salt. Nevertheless, at the very least this scheme will rescue me from the \\\"recommendation-island\\\".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"PS: it is not just Netflix; Amazon Prime has the same problem, the engine assumes I like Bollywood movies and it is fair for me to browse through multiple pages to get to the actual content I want to watch. Just because there is some inferred feature in my profile -- that indicates to the recommendation engine that I like to watch Bollywood movie-- doesn't mean/indicate that I like to watch Bollywood movies.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.linkedin.com/pulse/stranded-recommendation-island-dawood-khan/\",\n        children: \"Originally on linkedin\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"id":"recommendation-hell"},"__N_SSG":true}